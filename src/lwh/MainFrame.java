package lwh;

import java.io.File;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import kbt.Config;
import kbt.I18n;
import kbt.KeyValue;
import kbt.PrintFormat;

/**
 *
 * @author kabot
 */
public class MainFrame extends javax.swing.JFrame {

    private Magazyn mag;
    private DefaultTableModel model;
    private HashMap<Integer, Integer> listaPosId = new HashMap<>();

    /**
     * Creates new form MainFrame
     */
    public MainFrame()
    {
      initComponents();

      DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
      rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
      jTable1.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
      jTable1.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
      jTable1.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);

      filter.requestFocus();

      mag = new Magazyn();

      model = (DefaultTableModel)jTable1.getModel();

      setMagList(mag.getList());
    }

    private void setMagList(Map<Integer, KeyValue> list)
    {
        for (Map.Entry<Integer, KeyValue> m : list.entrySet()) {
            magCombo.addItem(m.getValue());
        }
    }

    public void setProductTable()
    {
      DecimalFormat df0 = PrintFormat.getDecimal("0.00");
      DecimalFormat df = PrintFormat.getDecimal("#.##");
      int pos = 0;
      ArrayList<Product> list = mag.getProductList(
              ((KeyValue)magCombo.getSelectedItem()).key,
              filter.getText());

      listaPosId.clear();

      model.getDataVector().removeAllElements();
      model.fireTableDataChanged();

      for (Product p : list) {
        pos++;

        model.addRow(new Object[]{
          pos,
          p.name,
          p.um,
          p.vat,
          df.format(p.quantity),
          df0.format(p.price),
          df0.format(p.priceSell),
          p.date
        });

        listaPosId.put(pos, p.id);
      }
    }

    private static String getWorkDir()
    {
      String jarPath = MainFrame.class.getProtectionDomain().getCodeSource().getLocation().getPath();
      String dir;

      dir = new File(jarPath).getParent();

      return dir;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jSplitPane1 = new javax.swing.JSplitPane();
    jPanel1 = new javax.swing.JPanel();
    magCombo = new javax.swing.JComboBox<KeyValue>();
    filter = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTable1 = new javax.swing.JTable();
    jMenuBar1 = new javax.swing.JMenuBar();
    jMenu1 = new javax.swing.JMenu();
    jMenuItem2 = new javax.swing.JMenuItem();
    jSeparator1 = new javax.swing.JPopupMenu.Separator();
    jMenuItem4 = new javax.swing.JMenuItem();
    jMenuItem3 = new javax.swing.JMenuItem();
    jMenuItem1 = new javax.swing.JMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("lwh/resources/messages"); // NOI18N
    setTitle(bundle.getString("MainFrame.title")); // NOI18N

    jSplitPane1.setDividerSize(0);
    jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

    magCombo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        magListChange(evt);
      }
    });

    filter.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        filterChanged(evt);
      }
    });

    jButton1.setText(bundle.getString("MainFrame.jButton1.text")); // NOI18N
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        szukajAction(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(magCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(filter, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
        .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(jButton1)
        .addComponent(magCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    jSplitPane1.setTopComponent(jPanel1);

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null, null, null, null, null}
      },
      new String [] {
        "Lp", "Nazwa", "Jm", "Vat", "Ilość", "Cena netto", "Cena sprzedaży", "Data"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
      };
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false, false, false
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jTable1.getTableHeader().setReorderingAllowed(false);
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        listaClicked(evt);
      }
    });
    jScrollPane1.setViewportView(jTable1);
    jTable1.getColumnModel().getColumn(0).setMinWidth(20);
    jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
    jTable1.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("MainFrame.jTable1.columnModel.title0_1")); // NOI18N
    jTable1.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("MainFrame.jTable1.columnModel.title1_1")); // NOI18N
    jTable1.getColumnModel().getColumn(2).setMinWidth(20);
    jTable1.getColumnModel().getColumn(2).setMaxWidth(70);
    jTable1.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("MainFrame.jTable1.columnModel.title2_1")); // NOI18N
    jTable1.getColumnModel().getColumn(3).setMinWidth(20);
    jTable1.getColumnModel().getColumn(3).setMaxWidth(70);
    jTable1.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("MainFrame.jTable1.columnModel.title3_1")); // NOI18N
    jTable1.getColumnModel().getColumn(4).setMinWidth(20);
    jTable1.getColumnModel().getColumn(4).setMaxWidth(70);
    jTable1.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("MainFrame.jTable1.columnModel.title4_1")); // NOI18N
    jTable1.getColumnModel().getColumn(5).setMinWidth(20);
    jTable1.getColumnModel().getColumn(5).setMaxWidth(70);
    jTable1.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("MainFrame.jTable1.columnModel.title5_1")); // NOI18N
    jTable1.getColumnModel().getColumn(6).setMinWidth(20);
    jTable1.getColumnModel().getColumn(6).setMaxWidth(70);
    jTable1.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("MainFrame.jTable1.columnModel.title6_1")); // NOI18N
    jTable1.getColumnModel().getColumn(7).setMinWidth(80);
    jTable1.getColumnModel().getColumn(7).setMaxWidth(120);
    jTable1.getColumnModel().getColumn(7).setHeaderValue(bundle.getString("MainFrame.jTable1.columnModel.title7_1")); // NOI18N

    jSplitPane1.setRightComponent(jScrollPane1);

    jMenu1.setText(bundle.getString("MainFrame.jMenu1.text")); // NOI18N

    jMenuItem2.setText(bundle.getString("MainFrame.jMenuItem2.text")); // NOI18N
    jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuNowyProdukt(evt);
      }
    });
    jMenu1.add(jMenuItem2);
    jMenu1.add(jSeparator1);

    jMenuItem4.setText(bundle.getString("MainFrame.jMenuItem4.text")); // NOI18N
    jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem4ActionExport(evt);
      }
    });
    jMenu1.add(jMenuItem4);

    jMenuItem3.setText(bundle.getString("MainFrame.jMenuItem3.text")); // NOI18N
    jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        actionAktualizacja(evt);
      }
    });
    jMenu1.add(jMenuItem3);

    jMenuItem1.setText(bundle.getString("MainFrame.jMenuItem1.text")); // NOI18N
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem1ActionPerformed(evt);
      }
    });
    jMenu1.add(jMenuItem1);

    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jSplitPane1)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void magListChange(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_magListChange
//        System.out.println("magListChange zmiana ");
        setProductTable();
    }//GEN-LAST:event_magListChange

    private void filterChanged(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterChanged
        setProductTable();
    }//GEN-LAST:event_filterChanged

    private void szukajAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_szukajAction
        setProductTable();
    }//GEN-LAST:event_szukajAction

    private void listaClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaClicked
      int row = jTable1.getSelectedRow();
      int id = listaPosId.get(row+1);

      new ProductDialog(this, id).setVisible(true);

      setProductTable();
      filter.requestFocus();
      filter.selectAll();
    }//GEN-LAST:event_listaClicked

  private void menuNowyProdukt(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuNowyProdukt
  {//GEN-HEADEREND:event_menuNowyProdukt
    new ProductDialog(this, 0).setVisible(true);

    setProductTable();
    filter.requestFocus();
    filter.selectAll();
  }//GEN-LAST:event_menuNowyProdukt

  private void actionAktualizacja(java.awt.event.ActionEvent evt)//GEN-FIRST:event_actionAktualizacja
  {//GEN-HEADEREND:event_actionAktualizacja
    new UpgradeDialog(this, true).setVisible(true);
  }//GEN-LAST:event_actionAktualizacja

  /**
   * export
   * @param evt
   */
  private void jMenuItem4ActionExport(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem4ActionExport
  {//GEN-HEADEREND:event_jMenuItem4ActionExport
    KeyValue m;
    JFileChooser fc = new JFileChooser(){
      @Override
      public void approveSelection()
      {
        File f = getSelectedFile();
        if (f.exists()) {
            int result = JOptionPane.showConfirmDialog(this,
                                                       I18n.tr("msg.MainFrame.Plik_istnieje.czy_chcesz_go_nadpisac"),
                                                       I18n.tr("msg.MainFrame.PLik_istnieje"),
                                                       JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
              super.approveSelection();
            }
        }
        else {
          super.approveSelection();
        }
      }
    };

    m = (KeyValue)magCombo.getSelectedItem();

    fc.setSelectedFile(new File(m.value + ".csv"));
    if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
      mag.exportCsv(m.key, fc.getSelectedFile());
    }
  }//GEN-LAST:event_jMenuItem4ActionExport

  /**
   * @param args the command line arguments
   */
  public static void main(String[] args)
  {
    String workdir;
    Upgrade upg = new Upgrade();

    if (args.length > 0) {
      //tryb debug - jawnie podany katalog aplikacji
      workdir = args[0];
    }
    else {
      workdir = getWorkDir();
    }
    Config.setWorkDir(workdir);

    I18n.setLocale(Config.get("lang"));

    upg.updateDb();

    // program moze byc wywolywany przez magazynstart
    java.awt.EventQueue.invokeLater(new Runnable() {

      @Override
      public void run() {
        new MainFrame().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField filter;
  private javax.swing.JButton jButton1;
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JMenuItem jMenuItem1;
  private javax.swing.JMenuItem jMenuItem2;
  private javax.swing.JMenuItem jMenuItem3;
  private javax.swing.JMenuItem jMenuItem4;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JPopupMenu.Separator jSeparator1;
  private javax.swing.JSplitPane jSplitPane1;
  private javax.swing.JTable jTable1;
  private javax.swing.JComboBox<KeyValue> magCombo;
  // End of variables declaration//GEN-END:variables
}
